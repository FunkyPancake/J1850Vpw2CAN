/***********************************************************************************************************************
 * This file was generated by the MCUXpresso Config Tools. Any manual edits made to this file
 * will be overwritten if the respective MCUXpresso Config Tools is used to update this file.
 **********************************************************************************************************************/

#ifndef _PERIPHERALS_H_
#define _PERIPHERALS_H_

/***********************************************************************************************************************
 * Included files
 **********************************************************************************************************************/
#include "fsl_clock.h"
#include "fsl_common.h"
#include "fsl_dmamux.h"
#include "fsl_edma.h"
#include "fsl_ewm.h"
#include "fsl_flexcan.h"
#include "fsl_ftm.h"
#include "fsl_gpio.h"
#include "fsl_lpspi.h"
#include "fsl_lpspi_freertos.h"
#include "fsl_lpuart.h"
#include "fsl_lpuart_edma.h"
#include "fsl_port.h"

#if defined(__cplusplus)
extern "C" {
#endif /* __cplusplus */

/***********************************************************************************************************************
 * Definitions
 **********************************************************************************************************************/
/* Definitions for BOARD_InitPeripherals functional group */
/* Used DMA device. */
#define DMA_DMA_BASEADDR DMA0
/* Associated DMAMUX device that is used for muxing of requests. */
#define DMA_DMAMUX_BASEADDR DMAMUX
/* Definition of peripheral ID */
#define CAN0_PERIPHERAL CAN0
/* Definition of the clock source frequency */
#define CAN0_CLOCK_SOURCE 84000000UL
/* CAN0 interrupt vector ID (number). */
#define CAN0_CAN_ORED_MB_IRQN CAN0_ORed_Message_buffer_IRQn
/* CAN0 interrupt vector priority. */
#define CAN0_CAN_ORED_MB_IRQ_PRIORITY 1
/* CAN0 interrupt handler identifier. */
#define CAN0_CAN_ORED_MB_IRQHANDLER CAN0_ORed_Message_buffer_IRQHandler
/* BOARD_InitPeripherals defines for LPSPI0 */
/* Definition of peripheral ID */
#define LPSPI0_PERIPHERAL LPSPI0
/* Definition of clock source */
#define LPSPI0_CLOCK_FREQ 10500000UL
/* LPSPI0 interrupt vector ID (number). */
#define LPSPI0_IRQN LPSPI0_IRQn
/* LPSPI0 interrupt vector priority. */
#define LPSPI0_IRQ_PRIORITY 5
/* Transfer buffer size */
#define LPSPI0_BUFFER_SIZE 10
/* Definition of peripheral ID */
#define FTM1_PERIPHERAL FTM1
/* Definition of the clock source frequency */
#define FTM1_CLOCK_SOURCE 168000000UL
/* Definition of the clock source frequency */
#define FTM1_TIMER_MODULO_VALUE 83
/* Definition of peripheral ID */
#define LPUART0_PERIPHERAL LPUART0
/* Definition of the clock source frequency */
#define LPUART0_CLOCK_SOURCE 10500000UL
/* LPUART0 eDMA source request. */
#define LPUART0_RX_DMA_REQUEST kDmaRequestMux0LPUART0Rx
/* Selected eDMA channel number. */
#define LPUART0_RX_DMA_CHANNEL 0
/* DMAMUX device that is used for muxing of the request. */
#define LPUART0_RX_DMAMUX_BASEADDR DMAMUX
/* Used DMA device. */
#define LPUART0_RX_DMA_BASEADDR DMA0
/* LPUART0 eDMA source request. */
#define LPUART0_TX_DMA_REQUEST kDmaRequestMux0LPUART0Tx
/* Selected eDMA channel number. */
#define LPUART0_TX_DMA_CHANNEL 1
/* DMAMUX device that is used for muxing of the request. */
#define LPUART0_TX_DMAMUX_BASEADDR DMAMUX
/* Used DMA device. */
#define LPUART0_TX_DMA_BASEADDR DMA0
/* Alias for GPIOD peripheral */
#define GPIOD_GPIO GPIOD
/* Alias for PORTD */
#define GPIOD_PORT PORTD
/* GPIOD interrupt vector ID (number). */
#define GPIOD_IRQN PORTD_IRQn
/* GPIOD interrupt vector priority. */
#define GPIOD_IRQ_PRIORITY 2
/* GPIOD interrupt handler identifier. */
#define GPIOD_IRQHANDLER PORTD_IRQHandler
/* FLEXIO_CTRL: DOZEN=0, DBGE=0, FASTACC=0, FLEXEN=0 */
#define FLEXIO_CTRL_INIT 0x0U
/* FLEXIO_SHIFTSIEN: SSIE=0 */
#define FLEXIO_SHIFTSIEN_INIT 0x0U
/* FLEXIO_SHIFTEIEN: SEIE=0 */
#define FLEXIO_SHIFTEIEN_INIT 0x0U
/* FLEXIO_TIMIEN: TEIE=0 */
#define FLEXIO_TIMIEN_INIT 0x0U
/* FLEXIO_SHIFTSDEN: SSDE=0 */
#define FLEXIO_SHIFTSDEN_INIT 0x0U
/* FLEXIO_SHIFTCTL0: TIMSEL=0, TIMPOL=0, PINCFG=0, PINSEL=0, PINPOL=0, SMOD=0 */
#define FLEXIO_SHIFTCTL0_INIT 0x0U
/* FLEXIO_SHIFTCFG0: INSRC=0, SSTOP=0, SSTART=0 */
#define FLEXIO_SHIFTCFG0_INIT 0x0U
/* FLEXIO_TIMCTL0: TRGSEL=0, TRGPOL=0, TRGSRC=0, PINCFG=0, PINSEL=0, PINPOL=0, TIMOD=0 */
#define FLEXIO_TIMCTL0_INIT 0x0U
/* FLEXIO_TIMCFG0: TIMOUT=0, TIMDEC=0, TIMRST=0, TIMDIS=0, TIMENA=0, TSTOP=0, TSTART=0 */
#define FLEXIO_TIMCFG0_INIT 0x0U
/* Alias for EWM peripheral */
#define EWM_PERIPHERAL EWM
/* Definition of peripheral ID */
#define CAN1_PERIPHERAL CAN1
/* Definition of the clock source frequency */
#define CAN1_CLOCK_SOURCE 84000000UL

/***********************************************************************************************************************
 * Global variables
 **********************************************************************************************************************/
extern const edma_config_t DMA_config;
extern const flexcan_config_t CAN0_config;
/* Message buffer 0 configuration structure */
extern const flexcan_rx_mb_config_t CAN0_rx_mb_config_0;
extern flexcan_rx_fifo_config_t CAN0_rx_fifo_config;
extern const lpspi_master_config_t LPSPI0_config;
extern lpspi_transfer_t LPSPI0_transfer;
extern lpspi_rtos_handle_t LPSPI0_handle;
extern const ftm_config_t FTM1_config;
extern const lpuart_config_t LPUART0_config;
extern edma_handle_t LPUART0_RX_Handle;
extern edma_handle_t LPUART0_TX_Handle;
extern lpuart_edma_handle_t LPUART0_LPUART_eDMA_Handle;
extern const ewm_config_t EWM_config;
extern const flexcan_config_t CAN1_config;
/* Message buffer 0 configuration structure */
extern const flexcan_rx_mb_config_t CAN1_rx_mb_config_0;
extern flexcan_rx_fifo_config_t CAN1_rx_fifo_config;

/***********************************************************************************************************************
 * Initialization functions
 **********************************************************************************************************************/

void BOARD_InitPeripherals(void);

/***********************************************************************************************************************
 * BOARD_InitBootPeripherals function
 **********************************************************************************************************************/
void BOARD_InitBootPeripherals(void);

#if defined(__cplusplus)
}
#endif

#endif /* _PERIPHERALS_H_ */
